import platform
import time
import os
import sys
import json
from telethon import events

# –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
start_time = time.time()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
def load_config():
    with open(os.path.join(os.path.dirname(os.path.abspath(__file__)), '..', 'config.json'), 'r', encoding='utf-8') as file:
        return json.load(file)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ config.json
config = load_config()
AUTHORIZED_USER_ID = config.get('user_id')

def format_uptime(seconds):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥."""
    days = seconds // 86400
    hours = (seconds % 86400) // 3600
    minutes = (seconds % 3600) // 60
    seconds = seconds % 60
    return f"{int(days)}–¥ {int(hours)}—á {int(minutes)}–º {int(seconds)}—Å"

def get_bot_version():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞ ../version.py"""
    version_file = os.path.join(os.path.dirname(os.path.abspath(__file__)), "..", "version.py")
    version = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    
    if os.path.exists(version_file):
        try:
            version_namespace = {}
            with open(version_file, "r", encoding="utf-8") as f:
                exec(f.read(), version_namespace)
            version = version_namespace.get("VERSION", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–µ—Ä—Å–∏–∏: {e}")
    
    return version

def register_module(client):
    print("Registering module user_info...")

    if client is None:
        print("‚ùå –û—à–∏–±–∫–∞: client is None!")
        return

    @client.on(events.NewMessage(pattern=r"^\.info$"))
    async def user_info(event):
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏—à–µ–ª –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if event.sender_id != AUTHORIZED_USER_ID:
                return  # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º

            if not event:
                print("‚ùå –û—à–∏–±–∫–∞: event is None!")
                return

            if not event.sender_id:
                print("‚ùå –û—à–∏–±–∫–∞: sender_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
                await event.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.")
                return

            user = await event.get_sender() if event.sender_id else None
            
            if user is None:
                print("‚ùå –û—à–∏–±–∫–∞: event.get_sender() –≤–µ—Ä–Ω—É–ª None!")
                await event.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.")
                return

            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
            os_name = platform.system()
            os_details = platform.release()

            if "Android" in os_name or "linux" in os_name.lower():
                try:
                    with open("/system/bin/sh") as f:
                        os_name = "Termux" if "Android" in platform.uname().version else "Linux"
                except FileNotFoundError:
                    pass

            # –í—ã—á–∏—Å–ª—è–µ–º –∞–ø—Ç–∞–π–º –±–æ—Ç–∞
            uptime = format_uptime(time.time() - start_time)

            # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞
            bot_version = get_bot_version()

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            text = "üìå *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Lukas:*\n\n"
            text += f"üë§ *–ò–º—è:* {user.first_name or '–ù–µ—Ç –∏–º–µ–Ω–∏'}\n"
            if user.username:
                text += f"üìõ *–Æ–∑–µ—Ä–Ω–µ–π–º:* @{user.username}\n"
            text += f"üÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* `{user.id}`\n\n"
            text += f"üíª *–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:* {os_name} {os_details}\n"
            text += f"‚è≥ *–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:* {uptime}\n\n"
            text += f"üîπ *–í–µ—Ä—Å–∏—è –±–æ—Ç–∞:* {bot_version}"

            # –í—Ä–µ–º–µ–Ω–Ω–æ –∏–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞
            await event.edit("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            await event.edit(text)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ user_info: {e}")
            await event.reply("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")

    print("‚úÖ –ú–æ–¥—É–ª—å user_info —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")  

COMMANDS = [".info" ".help"]