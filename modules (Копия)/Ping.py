import time
import os
import json
from telethon import events

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —è–∑—ã–∫–æ–º
LANG_FILE = "modules/language.txt"  # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —Ñ–∞–π–ª —Ç–µ–ø–µ—Ä—å –≤ –ø–∞–ø–∫–µ modules

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
LANGUAGES = {
    "en": {
        "ping_message": "Pong! The ping is not dependent on your server, but on Telegram's servers üèì\nTime: {ping_time:.2f} ms",
    },
    "ru": {
        "ping_message": "–ü–æ–Ω–≥! –ü–∏–Ω–≥ –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–æ–≤ Telegram üèì\n–í—Ä–µ–º—è: {ping_time:.2f} –º—Å",
    },
    "ua": {
        "ping_message": "–ü–æ–Ω–≥! –ü—ñ–Ω–≥ –Ω–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –≤–∞—à–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –∞ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä—ñ–≤ Telegram üèì\n–ß–∞—Å: {ping_time:.2f} –º—Å",
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —è–∑—ã–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞
def load_language():
    if os.path.exists(LANG_FILE):
        with open(LANG_FILE, "r", encoding="utf-8") as file:
            lang_code = file.read().strip().lower()
            print(f"–ó–∞–≥—Ä—É–∂–µ–Ω —è–∑—ã–∫: {lang_code}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    else:
        lang_code = "en"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞, –µ—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    return LANGUAGES.get(lang_code, LANGUAGES["en"])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞ config.json
def load_config():
    with open(os.path.join(os.path.dirname(os.path.abspath(__file__)), '..', 'config.json'), 'r', encoding='utf-8') as file:
        return json.load(file)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ config.json
config = load_config()
AUTHORIZED_USER_ID = config.get('user_id')

# –ö–æ–º–∞–Ω–¥—ã –º–æ–¥—É–ª—è
COMMANDS = [".ping"]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª—è
async def register_module(client):
    @client.on(events.NewMessage(pattern=r"\.ping"))
    async def ping(event):
        """–ö–æ–º–∞–Ω–¥–∞ .ping –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞"""
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏—à–µ–ª –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if event.sender_id != AUTHORIZED_USER_ID:
            return  # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ –∫–æ–º–∞–Ω–¥—ã
        lang = load_language()

        start_time = time.time()  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "Pinging..."
        message = await event.reply("Pinging...")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

        end_time = time.time()  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
        # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞
        ping_time = (end_time - start_time) * 1000  # –í—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º, –≤–º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ
        await message.edit(lang["ping_message"].format(ping_time=ping_time))  # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
